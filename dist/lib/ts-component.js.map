{"version":3,"sources":["lib/ts-component.tsx"],"names":[],"mappings":";;;;;;AAAA,IAAO,KAAK,WAAW,OAAO,CAAC,CAAC;AAChC,IAAO,CAAC,WAAW,QAAQ,CAAC,CAAC;AAC7B,wBAA4B,WAAW,CAAC,CAAA;AACxC,sBAA+B,OAC/B,CAAC,CADqC;AACtC,IAAI,gBAAgB,GAAG,IAAI,uBAAa,CAAC,wBAAwB,CAAC,CAAC;AACnE,IAAI,aAAa,GAAG,gBAAgB,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;AAO1D;IAAiD,+BAA+B;IAAhF;QAAA,iBAkBC;QAlBgD,8BAA+B;QAC/E,mEAAmE;QACnE,yDAAyD;QACzD,iBAAY,GAAG,EAAE,CAAC;QAcR,WAAM,GAAG,aAAK,CAAC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,KAAK,EAAV,CAAU,EAAE,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,QAAQ,CAAC,UAAA,CAAC,IAAI,OAAA,KAAK,EAAL,CAAK,CAAC,EAAzB,CAAyB,CAAC,CAAC;IAC1F,CAAC;IAbU,+BAAS,GAAnB;QACC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IAES,+BAAS,GAAnB,UAAoB,QAAiC;QAArD,iBAMC;QALA,IAAI,CAAC,QAAQ,CAAC,UAAA,CAAC;YACd,IAAI,SAAS,GAAG,KAAI,CAAC,SAAS,EAAE,CAAC;YACjC,QAAQ,CAAC,SAAS,CAAC,CAAC;YACpB,MAAM,CAAC,SAAS,CAAC;QAClB,CAAC,CAAC,CAAC;IACJ,CAAC;IAGF,kBAAC;AAAD,CAlBA,AAkBC,CAlBgD,KAAK,CAAC,SAAS,GAkB/D;AAlBY,mBAAW,cAkBvB,CAAA;AAED;IAAmB,wBAAmB;IAAtC;QAAmB,8BAAmB;IAEtC,CAAC;IAAD,WAAC;AAAD,CAFA,AAEC,CAFkB,WAAW,GAE7B;AAED,IAAI,IAAI,GAA2B,WAAW,CAAC","file":"ts-component.js","sourcesContent":["import React = require('react');\r\nimport _ = require('lodash');\r\nimport {SymbolFactory} from \"./helpers\";\r\nimport {RexScalar, Rexes} from 'rexjs'\r\nlet componentSymbols = new SymbolFactory(\"react-ts2.ts-component\");\r\nlet contextSymbol = componentSymbols.symbolFor(\"context\");\r\n\r\n\r\nexport type ReactConstructor<TProps> = (new(props ?: TProps, context ?: any) => React.Component<TProps, any>)\r\n\r\n\r\n\r\nexport class TsComponent<TProps, TState> extends React.Component<TProps, TState> {\r\n\t//automatically allow context passing. To meaningfully use context,\r\n\t//you still have to declare a context member with a type.\r\n\tcontextTypes = {};\r\n\r\n\tprotected copyState() {\r\n\t\treturn _.cloneDeep(this.state);\r\n\t}\r\n\r\n\tprotected withState(mutation : (cur : TState) => void) {\r\n\t\tthis.setState(s => {\r\n\t\t\tlet copyState = this.copyState();\r\n\t\t\tmutation(copyState);\r\n\t\t\treturn copyState;\r\n\t\t});\r\n\t}\r\n\r\n\tprotected state_ = Rexes.computed_(() => this.state, input => this.setState(p => input));\r\n}\r\n\r\nclass Test extends TsComponent<{}, {}> {\r\n\r\n}\r\n\r\nlet ctor : ReactConstructor<any> = TsComponent;"],"sourceRoot":"/src"}